plugins {
    id 'java-library'
    id 'maven'
}

group 'protocol'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.11

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    api group: 'protocol', name: 'message', version: '1.0-SNAPSHOT'
    api group: 'com.google.guava', name: 'guava', version: '27.0.1-jre'
    api group: 'io.netty', name: 'netty-all', version: '4.1.33.Final'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

// Java 9+ modules

/*
ext.moduleName = 'protocol.handler'

compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}

compileTestJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'junit',
                '--add-reads', "$moduleName=junit",
                '--patch-module', "$moduleName=" + files(sourceSets.test.java.srcDirs).asPath,
        ]
        classpath = files()
    }
}

test {
    inputs.property("moduleName", moduleName)
    doFirst {
        jvmArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'ALL-MODULE-PATH',
                '--add-reads', "$moduleName=junit",
                '--patch-module', "$moduleName=" + files(sourceSets.test.java.outputDir).asPath,
        ]
        classpath = files()
    }
}
*/
